
# Simple Linear Regression

## Importing the libraries

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd

"""## Importing the dataset"""

dataset = pd.read_csv('student.csv')
X = dataset.iloc[:, :-1].values
y = dataset.iloc[:, -1].values

"""## Splitting the dataset into the Training set and Test set"""

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 1/3, random_state = 0)

"""## Training the Simple Linear Regression model on the Training set"""

from sklearn.linear_model import LinearRegression
regressor = LinearRegression()
regressor.fit(X_train, y_train)

"""## Predicting the Test set results"""

y_pred = regressor.predict(X_test)

print(X_train)

"""## Visualising the Training set results"""

plt.scatter(X_train, y_train, color = 'red')
plt.plot(X_train, regressor.predict(X_train), color = 'blue')
plt.title('Studied Time VS Percentage')
plt.xlabel('Studied Time (hr)')
plt.ylabel('% Score')
plt.show()

"""## Visualising the Test set results"""

plt.scatter(X_test, y_test, color = 'red')
plt.plot(X_train, regressor.predict(X_train), color = 'blue')
plt.title('Studied Time VS Percentage')
plt.xlabel('Studied Time (hr)')
plt.ylabel('% Score')
plt.show()

print(X_test)

print(pd.DataFrame({'Actual': y_test, 'Predicted': y_pred})  )

"""# *Testing Model on random data values*"""

hours = 9.5
temp_pred = regressor.predict([[hours]])
print('Input hrs: ',hours)

print('Predicted %: ',temp_pred[0])

"""# **Model Performace** (mean absolute error)"""

from sklearn.metrics import mean_absolute_error
print('Mean Absolute Error:',mean_absolute_error(y_test, y_pred))
